[Event]
-Name:pre_JANITOR_Script
-Prq.Prophessions:JANITOR,JANITOR-EXPERT
-Priority:0
-Prq.InCutscene:0
-Prq.IsGlobalEvent:0
-Protected:0
-Script.In:
	$ifdebug local step=1;
	local trashObjectTable;
	// Проверяем есть ли у уборщика предпочтительный мусор
	trashObjectTable=actor_GetAttributeS(thisActor,"PrefferedTrash");
	if(trashObjectTable!=""){
		trashObjectTable=actor_IsActorExist(trashObjectTable);
		if(trashObjectTable==false){
			// Исчез уже этот мусор...
			trashObjectTable="";
			actor_SetAttribute(thisActor,"PrefferedTrash","");
		}
	}
	if(trashObjectTable==""){
		//пускаем поиск мусора - любой случайный
		trashObjectTable=actor_GetActorsByProfAttribute("COLLECTIBLE*","__BUSY",0);
	}
	
	$ifdebug step=2;
	//если мусор не найден, отпарвляется страдать фигнёй
	if (!trashObjectTable || actor_GetAttributeN(trashObjectTable,"__InPocket")!=0){
		$ifdebug step=3;
		actor_SwitchToAction(thisActor,"NONE_Script");
		return;
	}
	//core_Alert(trashObjectTable.Name);
	local trashObjectName = trashObjectTable.Name;
	$ifdebug step=trashObjectName+" check...";
	{// Проверяем наличие пути к мусору
		if(nloc_CheckWalkablePath(thisActor,trashObjectTable)==false){
			// недоступен
			$ifdebug step=trashObjectName+" check failed...";
			actor_SwitchToAction(thisActor,"NONE_Script");
			return;
		}
	}
	actor_SetActionLabel(thisActor,"JANITOR.1");
	// Отправляем к актеру-мусору
	$ifdebug step=trashObjectName+" going!!!...";
	if(!actorWait_GoTo(thisActor, trashObjectTable)){
		// Может не дойти - если мусор внезапно стал перегорожен
		$ifdebug step=5;
		actor_SwitchToAction(thisActor,"NONE_Script");
		return;
	}

	if(actor_IsActorExist(trashObjectTable)==false){
		// Может пропасть - много мусорщиков спокойно могут "своровать" до прихода, некоторый мусор убирается быстро
		$ifdebug step=5.1;
		actor_SwitchToAction(thisActor,"NONE_Script");
		return;
	};
	//повторная проверка, на случай, если мусор "заняли", пока уборщик к нему шёл
	if (actor_GetAttributeN(trashObjectName,"__BUSY")!=1 || actor_GetAttributeN(trashObjectTable,"__InPocket")!=0){
		//если не заняли, оставляет название мусора себе в атибутахи топает работать с ним
		$ifdebug step=7;
		actor_SetAttribute(thisActor,"CurrentTrashName",trashObjectName);
		actor_SwitchToAction(thisActor,"JANITOR_script");
		return;
	}
	
	//если заняли, то снова ищет свободный мусор
	$ifdebug step=8;
	actor_RestartAction(thisActor);

[Event]
-Name:JANITOR_script
-Prq.Prophessions:JANITOR,JANITOR-EXPERT
-Priority:-1
-Prq.IsGlobalEvent:0
-Protected:0
-Script.In:
	//подготовительный ивент, один раз пускающий таймеры
	actor_SetAttribute(thisActor,"time_percent_tire",getTime());
	actor_SetActionLabel(thisActor,"JANITOR.2"); 
	actor_SwitchToAction(thisActor,"JANITOR_WORK");

[Event]
-Name:JANITOR_WORK
-Priority:-1
-Prq.IsGlobalEvent:0
-Protected:0
-Script.On:
	actor_AddItem(thisActor,"shvabra");
	local TrashName=actor_GetAttributeS(thisActor,"CurrentTrashName");
	if(actor_IsActorExist(TrashName)==false){
		actor_SwitchToAction(thisActor,"NONE_Script");
		return;
	};
	actor_SetAttribute(TrashName,"__BUSY",1);
	if(actor_GetAttributeN(TrashName,"trashclearing_begintime")==0)
	{
		actor_SetAttribute(TrashName,"trashclearing_begintime",getTime());
	}
-Script.Off:
	actor_DelItem(thisActor,"shvabra");
	local TrashName=actor_GetAttributeS(thisActor,"CurrentTrashName");
	if(TrashName != "" && actor_IsActorExist(TrashName)!=false){
		actor_SetAttribute(TrashName,"trashclearing_begintime",0);
		actor_SetAttribute(TrashName,"__BUSY",0);
	}
-Script.In:
	// Ивент НЕ ДОЛЖЕН посылать уборщика до точки
	// так как есть места где уборщик должен убирать указанную кучу откуда сказано
	$ifdebug local step=1;
	//получаем название убираемого мусора из атрибутов перса
	local TrashName = actor_GetAttributeS(thisActor,"CurrentTrashName");
	if(actor_IsActorExist(TrashName)==false){
		actor_SwitchToAction(thisActor,"NONE_Script");
		return;
	};
	local trashActor = actor_GetActor(TrashName);
	actor_SetActionLabel(thisActor,"JANITOR.WAITINGFORMUSOR");
	actor_SetAttribute(thisActor,"PrefferedTrash",TrashName);
	actor_OrientBody(thisActor,trashActor);
	local time = 0;
	local CurrentTrashItem = actor_GetItemByMask(TrashName,"heap_*");
	if(CurrentTrashItem!=false){
		//time = actor_GetAttributeN(TrashName,"exploration_"+CurrentTrashItem._name);
		$ifdebug step=2;
		time = actor_GetItemAttribute(TrashName,CurrentTrashItem,"time");
		if(!time){
			time = 0;
		}
	}
	$ifdebug step=2.1;
	if(time==0){
		time = actor_GetAttributeN(TrashName,"exploration");
	}
	if(time==0){
		time=getGlobal("cleaning_trash_sec");
	}
	//core_Alert(format("trash time=%i",time));
	if(getTime()-actor_GetAttributeN(TrashName, "trashclearing_begintime")>time){
		actor_SetAttribute(TrashName,"trashclearing_begintime",0);
		$ifdebug step=3;
		//убираем мусор, возвращаем перса на прескрипт искать новый мусор
		actor_SetAttribute(TrashName,"__BUSY",0);// Если не удалится то должен быть свободен
		local bIsNoItemsLeft=true;
		local switchToDragTrash=false;
		if(CurrentTrashItem!=false){
			$ifdebug step=4;
			bIsNoItemsLeft=false;
			local isEtapContinue = actor_GetItemAttribute(TrashName,CurrentTrashItem,"isEtapContinue");
            if(isEtapContinue!=1)
               {// Конец этапа уборки. забываем про предпочтительный мусор
                    actor_SetAttribute(thisActor,"PrefferedTrash","");
               }
			local isDragMusor = actor_GetItemAttribute(TrashName,CurrentTrashItem,"drag");
			if(isDragMusor==1 || CurrentTrashItem._name.find("drag")!=null)
			{// Конец этапа уборки. забываем про предпочтительный мусор
				switchToDragTrash = true;
				local isDragMusor2 = actor_GetItemAttribute(TrashName,CurrentTrashItem,"dragTo");
				if(isDragMusor2 != false)
				{
					actor_SetAttribute(thisActor,"JANITOR_CARRYTRASH.TARGET",isDragMusor2);
				}
			}
			//core_Alert(format("trash del=%s",CurrentTrashItem._name));
			actor_DelItem(TrashName,CurrentTrashItem._name);
			// Если ни одного итема не осталось - удаляем и кучу. Фона для финальной уборки нет так как и не нужно это
			$ifdebug step=5;
			if(actor_GetItemByMask(TrashName,"heap_*")==false)
			{
				$ifdebug step=6;
				bIsNoItemsLeft=true;
			}
		}
		actor_SetAttribute(thisActor,"CurrentTrashName","");
		if(bIsNoItemsLeft){
			$ifdebug step=7;
			actor_SetAttribute(thisActor,"PrefferedTrash","");
			actor_DeleteActor(TrashName);
		}
		$ifdebug step=8;
		if(switchToDragTrash){
			actor_SwitchToAction(thisActor,"JANITOR_CARRYTRASH");
		}else{
			actor_SwitchToAction(thisActor,"pre_JANITOR_Script");
		}
		return;
	}
	
	//счётчик усталости...1% за 13 секунд
	if(getTime()-actor_GetAttributeN(thisActor,"time_percent_tire")>getGlobal("janitor_tire_sec")){
		actor_SetAttribute(thisActor,"tire",actor_GetAttributeN(thisActor,"tire")+1);
		actor_SetAttribute(thisActor,"time_percent_tire",actor_GetAttributeN(thisActor,"time_percent_tire")-getGlobal("janitor_tire_sec"));
		actor_AddIcon(thisActor, "boredom_p1");
	}

	//если усталость 70 или выше, пускаем актора отдыхать (проверка на готовность статьи прописана выше по тексту, так что если усталость и готовность наступит одновременно, усталый автор всё равно потащит номер и даже может сэкономить единичку усталости)
	if(actor_GetAttributeN(thisActor,"tire")>(getGlobal("danger_tire")-1)){
		actor_DelItem(thisActor,"shvabra");
		actor_SwitchToAction(thisActor,"NONE_Script");
		return;
	}
	
	actor_RestartAction(thisActor);


[Event]
-Name:JANITOR_CARRYTRASH
-Priority:-1
-Prq.IsGlobalEvent:0
-Protected:0
-Script.In:
	actor_SetActionLabel(thisActor,"JANITOR.CARRING_TRASH");
	// Создаем мусор
	local newTrash=actor_CreateActor("collectible.trash","collectible.trash".toupper());
	actor_SetActorEnabled(newTrash, true);
	// Кладем его уборщику в карман
	actor_AddItem(thisActor,"collectible_item","collectible_number=7");
	actor_PutIntoPocket(thisActor,newTrash,"collectible_item");
	// Несем его к двери
	local sTarget = actor_GetAttributeS(thisActor,"JANITOR_CARRYTRASH.TARGET");
	if(sTarget == ""){
		sTarget="FurniTRASH::DROP_POINT";
	}
	actor_SetAttribute(thisActor,"JANITOR_CARRYTRASH.TARGET","");
	actorWait_GoTo(thisActor, sTarget);
	// Удаляем мусор
	actor_DeleteActor(newTrash);
	actor_DelItem(thisActor,"collectible_item");
	// Все, донесли... переходим к обычному поиску дел
	actor_SwitchToAction(thisActor,"pre_JANITOR_Script");
